/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.rutebanken.anshar.metrics.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

@org.apache.avro.specific.AvroGenerated
public class MetricRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2646057692878616377L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MetricRecord\",\"namespace\":\"no.rutebanken.anshar.metrics.avro\",\"fields\":[{\"name\":\"recordedAtTime\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"hostname\",\"type\":\"string\"},{\"name\":\"labels\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"LabelRecord\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]}},\"default\":[]},{\"name\":\"value\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MetricRecord> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MetricRecord> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MetricRecord> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MetricRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MetricRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MetricRecord to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MetricRecord from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MetricRecord instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MetricRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence recordedAtTime;
  private java.lang.CharSequence name;
  private java.lang.CharSequence hostname;
  private java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> labels;
  private double value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MetricRecord() {}

  /**
   * All-args constructor.
   * @param recordedAtTime The new value for recordedAtTime
   * @param name The new value for name
   * @param hostname The new value for hostname
   * @param labels The new value for labels
   * @param value The new value for value
   */
  public MetricRecord(java.lang.CharSequence recordedAtTime, java.lang.CharSequence name, java.lang.CharSequence hostname, java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> labels, java.lang.Double value) {
    this.recordedAtTime = recordedAtTime;
    this.name = name;
    this.hostname = hostname;
    this.labels = labels;
    this.value = value;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return recordedAtTime;
    case 1: return name;
    case 2: return hostname;
    case 3: return labels;
    case 4: return value;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: recordedAtTime = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: hostname = (java.lang.CharSequence)value$; break;
    case 3: labels = (java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord>)value$; break;
    case 4: value = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'recordedAtTime' field.
   * @return The value of the 'recordedAtTime' field.
   */
  public java.lang.CharSequence getRecordedAtTime() {
    return recordedAtTime;
  }


  /**
   * Sets the value of the 'recordedAtTime' field.
   * @param value the value to set.
   */
  public void setRecordedAtTime(java.lang.CharSequence value) {
    this.recordedAtTime = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'hostname' field.
   * @return The value of the 'hostname' field.
   */
  public java.lang.CharSequence getHostname() {
    return hostname;
  }


  /**
   * Sets the value of the 'hostname' field.
   * @param value the value to set.
   */
  public void setHostname(java.lang.CharSequence value) {
    this.hostname = value;
  }

  /**
   * Gets the value of the 'labels' field.
   * @return The value of the 'labels' field.
   */
  public java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> getLabels() {
    return labels;
  }


  /**
   * Sets the value of the 'labels' field.
   * @param value the value to set.
   */
  public void setLabels(java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> value) {
    this.labels = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public double getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(double value) {
    this.value = value;
  }

  /**
   * Creates a new MetricRecord RecordBuilder.
   * @return A new MetricRecord RecordBuilder
   */
  public static no.rutebanken.anshar.metrics.avro.MetricRecord.Builder newBuilder() {
    return new no.rutebanken.anshar.metrics.avro.MetricRecord.Builder();
  }

  /**
   * Creates a new MetricRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MetricRecord RecordBuilder
   */
  public static no.rutebanken.anshar.metrics.avro.MetricRecord.Builder newBuilder(no.rutebanken.anshar.metrics.avro.MetricRecord.Builder other) {
    if (other == null) {
      return new no.rutebanken.anshar.metrics.avro.MetricRecord.Builder();
    } else {
      return new no.rutebanken.anshar.metrics.avro.MetricRecord.Builder(other);
    }
  }

  /**
   * Creates a new MetricRecord RecordBuilder by copying an existing MetricRecord instance.
   * @param other The existing instance to copy.
   * @return A new MetricRecord RecordBuilder
   */
  public static no.rutebanken.anshar.metrics.avro.MetricRecord.Builder newBuilder(no.rutebanken.anshar.metrics.avro.MetricRecord other) {
    if (other == null) {
      return new no.rutebanken.anshar.metrics.avro.MetricRecord.Builder();
    } else {
      return new no.rutebanken.anshar.metrics.avro.MetricRecord.Builder(other);
    }
  }

  /**
   * RecordBuilder for MetricRecord instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MetricRecord>
    implements org.apache.avro.data.RecordBuilder<MetricRecord> {

    private java.lang.CharSequence recordedAtTime;
    private java.lang.CharSequence name;
    private java.lang.CharSequence hostname;
    private java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> labels;
    private double value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.rutebanken.anshar.metrics.avro.MetricRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.recordedAtTime)) {
        this.recordedAtTime = data().deepCopy(fields()[0].schema(), other.recordedAtTime);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.hostname)) {
        this.hostname = data().deepCopy(fields()[2].schema(), other.hostname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.labels)) {
        this.labels = data().deepCopy(fields()[3].schema(), other.labels);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing MetricRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(no.rutebanken.anshar.metrics.avro.MetricRecord other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.recordedAtTime)) {
        this.recordedAtTime = data().deepCopy(fields()[0].schema(), other.recordedAtTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hostname)) {
        this.hostname = data().deepCopy(fields()[2].schema(), other.hostname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.labels)) {
        this.labels = data().deepCopy(fields()[3].schema(), other.labels);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'recordedAtTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getRecordedAtTime() {
      return recordedAtTime;
    }


    /**
      * Sets the value of the 'recordedAtTime' field.
      * @param value The value of 'recordedAtTime'.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder setRecordedAtTime(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.recordedAtTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'recordedAtTime' field has been set.
      * @return True if the 'recordedAtTime' field has been set, false otherwise.
      */
    public boolean hasRecordedAtTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'recordedAtTime' field.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder clearRecordedAtTime() {
      recordedAtTime = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'hostname' field.
      * @return The value.
      */
    public java.lang.CharSequence getHostname() {
      return hostname;
    }


    /**
      * Sets the value of the 'hostname' field.
      * @param value The value of 'hostname'.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder setHostname(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.hostname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'hostname' field has been set.
      * @return True if the 'hostname' field has been set, false otherwise.
      */
    public boolean hasHostname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'hostname' field.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder clearHostname() {
      hostname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'labels' field.
      * @return The value.
      */
    public java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> getLabels() {
      return labels;
    }


    /**
      * Sets the value of the 'labels' field.
      * @param value The value of 'labels'.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder setLabels(java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> value) {
      validate(fields()[3], value);
      this.labels = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'labels' field has been set.
      * @return True if the 'labels' field has been set, false otherwise.
      */
    public boolean hasLabels() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'labels' field.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder clearLabels() {
      labels = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public double getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder setValue(double value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public no.rutebanken.anshar.metrics.avro.MetricRecord.Builder clearValue() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MetricRecord build() {
      try {
        MetricRecord record = new MetricRecord();
        record.recordedAtTime = fieldSetFlags()[0] ? this.recordedAtTime : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.hostname = fieldSetFlags()[2] ? this.hostname : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.labels = fieldSetFlags()[3] ? this.labels : (java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord>) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MetricRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<MetricRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MetricRecord>
    READER$ = (org.apache.avro.io.DatumReader<MetricRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.recordedAtTime);

    out.writeString(this.name);

    out.writeString(this.hostname);

    long size0 = this.labels.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (no.rutebanken.anshar.metrics.avro.LabelRecord e0: this.labels) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeDouble(this.value);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.recordedAtTime = in.readString(this.recordedAtTime instanceof Utf8 ? (Utf8)this.recordedAtTime : null);

      this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);

      this.hostname = in.readString(this.hostname instanceof Utf8 ? (Utf8)this.hostname : null);

      long size0 = in.readArrayStart();
      java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> a0 = this.labels;
      if (a0 == null) {
        a0 = new SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord>((int)size0, SCHEMA$.getField("labels").schema());
        this.labels = a0;
      } else a0.clear();
      SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          no.rutebanken.anshar.metrics.avro.LabelRecord e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new no.rutebanken.anshar.metrics.avro.LabelRecord();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      this.value = in.readDouble();

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.recordedAtTime = in.readString(this.recordedAtTime instanceof Utf8 ? (Utf8)this.recordedAtTime : null);
          break;

        case 1:
          this.name = in.readString(this.name instanceof Utf8 ? (Utf8)this.name : null);
          break;

        case 2:
          this.hostname = in.readString(this.hostname instanceof Utf8 ? (Utf8)this.hostname : null);
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<no.rutebanken.anshar.metrics.avro.LabelRecord> a0 = this.labels;
          if (a0 == null) {
            a0 = new SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord>((int)size0, SCHEMA$.getField("labels").schema());
            this.labels = a0;
          } else a0.clear();
          SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<no.rutebanken.anshar.metrics.avro.LabelRecord>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              no.rutebanken.anshar.metrics.avro.LabelRecord e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new no.rutebanken.anshar.metrics.avro.LabelRecord();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 4:
          this.value = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










