#
# Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by
# the European Commission - subsequent versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
#
#   https://joinup.ec.europa.eu/software/page/eupl
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
#

spring.main.sources=no.rutebanken.anshar

spring.profiles.active=in-memory-blobstore
spring.main.allow-circular-references=true
management.health.pubsub.enabled=false

anshar.environment=unittest
anshar.subscriptions.config.path=subscriptions-unittest.yml

# Full incoming request is logged to file in this directory when TRACE-logging is enabled
anshar.incoming.logdirectory=target/incoming
anshar.incoming.port = 23456

anshar.siri.default.producerRef=TEST

anshar.validation.profile.name=test
anshar.validation.profile.enabled=true

anshar.incoming.concurrentConsumers=5

anshar.inbound.url = http://localhost/anshar
anshar.healthcheck.interval.seconds = 30

anshar.healthcheck.hubot.url=http://localhost/hubot/say
anshar.healthcheck.hubot.payload.source=anshar
anshar.healthcheck.hubot.payload.icon.fail=:heavy_exclamation_mark:
anshar.healthcheck.hubot.payload.icon.success=:heavy_check_mark:
anshar.healthcheck.hubot.payload.message.fail=Not receiving data: {0}
anshar.healthcheck.hubot.payload.message.success=Subscriptions back to normal
anshar.healthcheck.hubot.payload.template=\"source\":\"{0}\", \"icon\":\"{1}\", \"message\":\"{2}\"
anshar.healthcheck.hubot.allowed.inactivity.minutes=10
anshar.healthcheck.hubot.start.time= 06:00
anshar.healthcheck.hubot.end.time= 07:00

anshar.admin.health.allowed.inactivity.seconds = 300

anshar.mapping.quays.url=
anshar.mapping.quays.gcs.path=
anshar.mapping.stopplaces.url=
anshar.mapping.stopplaces.gcs.path=
anshar.mapping.stopquayjson.gcs.path=
anshar.mapping.update.frequency.min=60


anshar.mapping.jbvCode.url=
anshar.mapping.jbvCode.gcs.path=

anshar.inbound.pattern  = /{context}/{version}/{type}/{vendor}/{subscriptionId}/{service}/{operation}

anshar.tracking.data.buffer.commit.frequency.seconds=1


anshar.outbound.pubsub.topic.enabled=false

anshar.message.queue.camel.route.prefix=direct:

spring.cloud.gcp.pubsub.project-id=test
spring.cloud.gcp.project-id=test
spring.cloud.gcp.pubsub.emulatorHost=localhost:8085
#
#
anshar.outbound.polling.tracking.period.minutes=30

anshar.outbound.adhoc.tracking.period.minutes=3

anshar.outbound.heartbeatinterval.minimum=60000
anshar.outbound.heartbeatinterval.maximum=600000

anshar.outbound.error.initialtermination=InitialTerminationTime has already passed.
anshar.outbound.error.consumeraddress=ConsumerAddress must be set.

anshar.outbound.activemq.topic.enabled=false

anshar.outbound.camel.route.topic.et.name=anshar.estimated_timetables
anshar.outbound.camel.route.topic.vm.name=anshar.vehicle_monitoring
anshar.outbound.camel.route.topic.sx.name=anshar.alerts

anshar.bigdata.siri.et.export.camel.url=

rutebanken.kubernetes.enabled=false

anshar.export.snapshot.cron.expression=
anshar.export.snapshot.tmpFolder=/tmp/incoming
blobstore.gcs.project.id=localhost
blobstore.gcs.container.name=anshar-test
blobstore.gcs.credential.path=/tmp/credentials/dummy.json

anshar.kafka.enabled=false
anshar.kafka.clientId=anshar-unit-test
anshar.kafka.topic.et.name=
anshar.kafka.topic.vm.name=
anshar.kafka.topic.sx.name=
anshar.kafka.brokers=
anshar.kafka.security.protocol=
anshar.kafka.security.sasl.mechanism=
anshar.kafka.sasl.username=
anshar.kafka.sasl.password=

anshar.reduced.logging.override.names=